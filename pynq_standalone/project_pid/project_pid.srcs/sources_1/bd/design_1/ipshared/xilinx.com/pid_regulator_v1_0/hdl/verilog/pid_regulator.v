// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pid_regulator,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.789400,HLS_SYN_LAT=36,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=862,HLS_SYN_LUT=1998}" *)

module pid_regulator (
        ap_clk,
        ap_rst_n,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_st1_fsm_0 = 37'b1;
parameter    ap_ST_st2_fsm_1 = 37'b10;
parameter    ap_ST_st3_fsm_2 = 37'b100;
parameter    ap_ST_st4_fsm_3 = 37'b1000;
parameter    ap_ST_st5_fsm_4 = 37'b10000;
parameter    ap_ST_st6_fsm_5 = 37'b100000;
parameter    ap_ST_st7_fsm_6 = 37'b1000000;
parameter    ap_ST_st8_fsm_7 = 37'b10000000;
parameter    ap_ST_st9_fsm_8 = 37'b100000000;
parameter    ap_ST_st10_fsm_9 = 37'b1000000000;
parameter    ap_ST_st11_fsm_10 = 37'b10000000000;
parameter    ap_ST_st12_fsm_11 = 37'b100000000000;
parameter    ap_ST_st13_fsm_12 = 37'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 37'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 37'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 37'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 37'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 37'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 37'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 37'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 37'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 37'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 37'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 37'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 37'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 37'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 37'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 37'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 37'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 37'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 37'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 37'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 37'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 37'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 37'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 37'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 37'b1000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_45992000 = 32'b1000101100110010010000000000000;
parameter    ap_const_lv32_C5992000 = 32'b11000101100110010010000000000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_455AC000 = 32'b1000101010110101100000000000000;
parameter    ap_const_lv32_C55AC000 = 32'b11000101010110101100000000000000;
parameter    ap_const_lv32_44BB8000 = 32'b1000100101110111000000000000000;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_C4BB8000 = 32'b11000100101110111000000000000000;
parameter    ap_const_lv32_43480000 = 32'b1000011010010000000000000000000;
parameter    ap_const_lv32_459AB000 = 32'b1000101100110101011000000000000;
parameter    ap_const_lv32_C59AB000 = 32'b11000101100110101011000000000000;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_4 = 5'b100;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_54;
reg    ap_ready;
wire   [31:0] Ref;
wire   [31:0] Fdb;
wire   [31:0] grp_fu_141_p2;
reg   [31:0] reg_174;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_107;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_114;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_122;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_130;
wire   [31:0] grp_fu_151_p2;
reg   [31:0] reg_184;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_140;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_147;
wire   [0:0] tmp_10_fu_295_p2;
reg   [0:0] tmp_10_reg_552;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_164;
wire   [0:0] tmp_15_fu_301_p2;
reg   [0:0] tmp_15_reg_556;
wire   [0:0] tmp_20_fu_361_p2;
reg   [0:0] tmp_20_reg_560;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_178;
wire   [0:0] tmp_22_fu_367_p2;
reg   [0:0] tmp_22_reg_564;
wire   [0:0] tmp_27_fu_427_p2;
reg   [0:0] tmp_27_reg_568;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_191;
wire   [0:0] tmp_29_fu_433_p2;
reg   [0:0] tmp_29_reg_572;
wire   [0:0] tmp_32_fu_493_p2;
reg   [0:0] tmp_32_reg_576;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_204;
wire   [0:0] tmp_34_fu_499_p2;
reg   [0:0] tmp_34_reg_581;
wire   [0:0] grp_fu_163_p2;
reg   [0:0] tmp_35_reg_587;
wire   [31:0] storemerge1_fu_521_p3;
reg   [31:0] storemerge1_reg_592;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_217;
reg   [31:0] tmp_6_phi_fu_100_p6;
reg   [31:0] tmp_6_reg_96;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_230;
reg   [31:0] tmp_1_reg_111;
reg   [31:0] tmp_s_reg_125;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_260;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_296;
reg   [31:0] grp_fu_141_p0;
reg   [31:0] grp_fu_141_p1;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_306;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_313;
reg   [31:0] grp_fu_151_p0;
reg   [31:0] grp_fu_151_p1;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_322;
reg   [31:0] grp_fu_158_p0;
reg   [31:0] grp_fu_158_p1;
reg   [31:0] grp_fu_163_p0;
reg   [31:0] grp_fu_163_p1;
wire   [31:0] tmp_3_to_int_fu_259_p1;
wire   [7:0] tmp_fu_263_p4;
wire   [22:0] tmp_4_fu_273_p1;
wire   [0:0] notrhs_fu_283_p2;
wire   [0:0] notlhs_fu_277_p2;
wire   [0:0] tmp_5_fu_289_p2;
wire   [0:0] grp_fu_158_p2;
wire   [31:0] tmp_8_to_int_fu_325_p1;
wire   [7:0] tmp_16_fu_329_p4;
wire   [22:0] tmp_17_fu_339_p1;
wire   [0:0] notrhs2_fu_349_p2;
wire   [0:0] notlhs2_fu_343_p2;
wire   [0:0] tmp_18_fu_355_p2;
wire   [31:0] tmp_7_to_int_fu_391_p1;
wire   [7:0] tmp_23_fu_395_p4;
wire   [22:0] tmp_24_fu_405_p1;
wire   [0:0] notrhs4_fu_415_p2;
wire   [0:0] notlhs4_fu_409_p2;
wire   [0:0] tmp_25_fu_421_p2;
wire   [31:0] tmp_14_to_int_fu_463_p1;
wire   [7:0] tmp_30_fu_467_p4;
wire   [22:0] tmp_31_fu_477_p1;
wire   [0:0] notrhs6_fu_487_p2;
wire   [0:0] notlhs6_fu_481_p2;
wire   [0:0] tmp_36_fu_505_p2;
wire   [0:0] tmp_37_fu_516_p2;
wire   [31:0] storemerge_fu_509_p3;
reg   [1:0] grp_fu_141_opcode;
reg   [36:0] ap_NS_fsm;
reg    ap_sig_249;
reg    ap_sig_251;
reg    ap_sig_554;
reg    ap_sig_269;
reg    ap_sig_271;
wire   [31:0] ap_return;

// power-on initialization
initial begin
#0 ap_CS_fsm = 37'b1;
end

pid_regulator_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
pid_regulator_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_return(storemerge1_reg_592),
    .Ref(Ref),
    .Fdb(Fdb)
);

pid_regulator_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pid_regulator_faddfsub_32ns_32ns_32_5_full_dsp_U0(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_141_p0),
    .din1(grp_fu_141_p1),
    .opcode(grp_fu_141_opcode),
    .ce(1'b1),
    .dout(grp_fu_141_p2)
);

pid_regulator_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pid_regulator_fmul_32ns_32ns_32_4_max_dsp_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_151_p0),
    .din1(grp_fu_151_p1),
    .ce(1'b1),
    .dout(grp_fu_151_p2)
);

pid_regulator_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
pid_regulator_fcmp_32ns_32ns_1_1_U2(
    .din0(grp_fu_158_p0),
    .din1(grp_fu_158_p1),
    .opcode(ap_const_lv5_2),
    .dout(grp_fu_158_p2)
);

pid_regulator_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
pid_regulator_fcmp_32ns_32ns_1_1_U3(
    .din0(grp_fu_163_p0),
    .din1(grp_fu_163_p1),
    .opcode(ap_const_lv5_4),
    .dout(grp_fu_163_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        if (ap_sig_251) begin
            tmp_1_reg_111 <= reg_174;
        end else if (ap_sig_249) begin
            tmp_1_reg_111 <= ap_const_lv32_C55AC000;
        end else if (~(1'b0 == tmp_20_reg_560)) begin
            tmp_1_reg_111 <= ap_const_lv32_455AC000;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & (tmp_10_reg_552 == 1'b0) & (tmp_15_reg_556 == 1'b0))) begin
        tmp_6_reg_96 <= reg_184;
    end else if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & (tmp_10_reg_552 == 1'b0) & ~(tmp_15_reg_556 == 1'b0))) begin
        tmp_6_reg_96 <= ap_const_lv32_C5992000;
    end else if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(tmp_10_fu_295_p2 == 1'b0))) begin
        tmp_6_reg_96 <= ap_const_lv32_45992000;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        if (ap_sig_271) begin
            tmp_s_reg_125 <= reg_184;
        end else if (ap_sig_269) begin
            tmp_s_reg_125 <= ap_const_lv32_C4BB8000;
        end else if (~(1'b0 == tmp_27_reg_568)) begin
            tmp_s_reg_125 <= ap_const_lv32_44BB8000;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18) | (1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st31_fsm_30))) begin
        reg_174 <= grp_fu_141_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        reg_184 <= grp_fu_151_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        storemerge1_reg_592 <= storemerge1_fu_521_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        tmp_10_reg_552 <= tmp_10_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & (tmp_10_fu_295_p2 == 1'b0))) begin
        tmp_15_reg_556 <= tmp_15_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        tmp_20_reg_560 <= tmp_20_fu_361_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & (1'b0 == tmp_20_fu_361_p2))) begin
        tmp_22_reg_564 <= tmp_22_fu_367_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        tmp_27_reg_568 <= tmp_27_fu_427_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & (1'b0 == tmp_27_fu_427_p2))) begin
        tmp_29_reg_572 <= tmp_29_fu_433_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        tmp_32_reg_576 <= tmp_32_fu_493_p2;
        tmp_34_reg_581 <= tmp_34_fu_499_p2;
        tmp_35_reg_587 <= grp_fu_163_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_164) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_230) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_147) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_306) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_114) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_54) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_178) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_191) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_260) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_122) begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_313) begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_130) begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_204) begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_217) begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_296) begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_107) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_322) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_140) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st33_fsm_32))) begin
        grp_fu_141_opcode = ap_const_lv2_1;
    end else if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26))) begin
        grp_fu_141_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_141_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_141_p0 = storemerge1_fu_521_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        grp_fu_141_p0 = reg_174;
    end else if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        grp_fu_141_p0 = tmp_6_reg_96;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        grp_fu_141_p0 = reg_184;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        grp_fu_141_p0 = Ref;
    end else begin
        grp_fu_141_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_141_p1 = reg_174;
    end else if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        grp_fu_141_p1 = tmp_s_reg_125;
    end else if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        grp_fu_141_p1 = tmp_1_reg_111;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        grp_fu_141_p1 = ap_const_lv32_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        grp_fu_141_p1 = Fdb;
    end else begin
        grp_fu_141_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        grp_fu_151_p0 = tmp_6_phi_fu_100_p6;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_fu_151_p0 = reg_174;
    end else begin
        grp_fu_151_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        grp_fu_151_p1 = ap_const_lv32_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_fu_151_p1 = ap_const_lv32_43480000;
    end else begin
        grp_fu_151_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31))) begin
        grp_fu_158_p0 = reg_174;
    end else if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20))) begin
        grp_fu_158_p0 = reg_184;
    end else begin
        grp_fu_158_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        grp_fu_158_p1 = ap_const_lv32_459AB000;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        grp_fu_158_p1 = ap_const_lv32_44BB8000;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_fu_158_p1 = ap_const_lv32_455AC000;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_158_p1 = ap_const_lv32_45992000;
    end else begin
        grp_fu_158_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31))) begin
        grp_fu_163_p0 = reg_174;
    end else if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20))) begin
        grp_fu_163_p0 = reg_184;
    end else begin
        grp_fu_163_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        grp_fu_163_p1 = ap_const_lv32_C59AB000;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        grp_fu_163_p1 = ap_const_lv32_C4BB8000;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_fu_163_p1 = ap_const_lv32_C55AC000;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_163_p1 = ap_const_lv32_C5992000;
    end else begin
        grp_fu_163_p1 = 'bx;
    end
end

always @ (*) begin
    if (ap_sig_554) begin
        if ((tmp_15_reg_556 == 1'b0)) begin
            tmp_6_phi_fu_100_p6 = reg_184;
        end else if (~(tmp_15_reg_556 == 1'b0)) begin
            tmp_6_phi_fu_100_p6 = ap_const_lv32_C5992000;
        end else begin
            tmp_6_phi_fu_100_p6 = tmp_6_reg_96;
        end
    end else begin
        tmp_6_phi_fu_100_p6 = tmp_6_reg_96;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_107 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_114 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_122 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_130 = (1'b1 == ap_CS_fsm[ap_const_lv32_1E]);
end

always @ (*) begin
    ap_sig_140 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_147 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_164 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_178 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_191 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_204 = (1'b1 == ap_CS_fsm[ap_const_lv32_1F]);
end

always @ (*) begin
    ap_sig_217 = (1'b1 == ap_CS_fsm[ap_const_lv32_20]);
end

always @ (*) begin
    ap_sig_230 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_249 = ((1'b0 == tmp_20_reg_560) & ~(1'b0 == tmp_22_reg_564));
end

always @ (*) begin
    ap_sig_251 = ((1'b0 == tmp_20_reg_560) & (1'b0 == tmp_22_reg_564));
end

always @ (*) begin
    ap_sig_260 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_269 = ((1'b0 == tmp_27_reg_568) & ~(1'b0 == tmp_29_reg_572));
end

always @ (*) begin
    ap_sig_271 = ((1'b0 == tmp_27_reg_568) & (1'b0 == tmp_29_reg_572));
end

always @ (*) begin
    ap_sig_296 = (1'b1 == ap_CS_fsm[ap_const_lv32_24]);
end

always @ (*) begin
    ap_sig_306 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_313 = (1'b1 == ap_CS_fsm[ap_const_lv32_1A]);
end

always @ (*) begin
    ap_sig_322 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_54 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_554 = ((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & (tmp_10_reg_552 == 1'b0));
end

assign notlhs2_fu_343_p2 = ((tmp_16_fu_329_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs4_fu_409_p2 = ((tmp_23_fu_395_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs6_fu_481_p2 = ((tmp_30_fu_467_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_277_p2 = ((tmp_fu_263_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs2_fu_349_p2 = ((tmp_17_fu_339_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs4_fu_415_p2 = ((tmp_24_fu_405_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs6_fu_487_p2 = ((tmp_31_fu_477_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_283_p2 = ((tmp_4_fu_273_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign storemerge1_fu_521_p3 = ((tmp_37_fu_516_p2[0:0] === 1'b1) ? storemerge_fu_509_p3 : reg_174);

assign storemerge_fu_509_p3 = ((tmp_34_reg_581[0:0] === 1'b1) ? ap_const_lv32_459AB000 : ap_const_lv32_C59AB000);

assign tmp_10_fu_295_p2 = (tmp_5_fu_289_p2 & grp_fu_158_p2);

assign tmp_14_to_int_fu_463_p1 = reg_174;

assign tmp_15_fu_301_p2 = (tmp_5_fu_289_p2 & grp_fu_163_p2);

assign tmp_16_fu_329_p4 = {{tmp_8_to_int_fu_325_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_17_fu_339_p1 = tmp_8_to_int_fu_325_p1[22:0];

assign tmp_18_fu_355_p2 = (notrhs2_fu_349_p2 | notlhs2_fu_343_p2);

assign tmp_20_fu_361_p2 = (tmp_18_fu_355_p2 & grp_fu_158_p2);

assign tmp_22_fu_367_p2 = (tmp_18_fu_355_p2 & grp_fu_163_p2);

assign tmp_23_fu_395_p4 = {{tmp_7_to_int_fu_391_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_24_fu_405_p1 = tmp_7_to_int_fu_391_p1[22:0];

assign tmp_25_fu_421_p2 = (notrhs4_fu_415_p2 | notlhs4_fu_409_p2);

assign tmp_27_fu_427_p2 = (tmp_25_fu_421_p2 & grp_fu_158_p2);

assign tmp_29_fu_433_p2 = (tmp_25_fu_421_p2 & grp_fu_163_p2);

assign tmp_30_fu_467_p4 = {{tmp_14_to_int_fu_463_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_31_fu_477_p1 = tmp_14_to_int_fu_463_p1[22:0];

assign tmp_32_fu_493_p2 = (notrhs6_fu_487_p2 | notlhs6_fu_481_p2);

assign tmp_34_fu_499_p2 = (tmp_32_fu_493_p2 & grp_fu_158_p2);

assign tmp_36_fu_505_p2 = (tmp_32_reg_576 & tmp_35_reg_587);

assign tmp_37_fu_516_p2 = (tmp_34_reg_581 | tmp_36_fu_505_p2);

assign tmp_3_to_int_fu_259_p1 = reg_184;

assign tmp_4_fu_273_p1 = tmp_3_to_int_fu_259_p1[22:0];

assign tmp_5_fu_289_p2 = (notrhs_fu_283_p2 | notlhs_fu_277_p2);

assign tmp_7_to_int_fu_391_p1 = reg_184;

assign tmp_8_to_int_fu_325_p1 = reg_174;

assign tmp_fu_263_p4 = {{tmp_3_to_int_fu_259_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

endmodule //pid_regulator
